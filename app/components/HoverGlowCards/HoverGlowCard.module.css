/* :root {
  --box-shadow-color: rgba(0, 0, 0, 0.1);
  --card-box-shadow: 0 0 28px 16px var(--box-shadow-color);
} */

/* CSS Variables (moved from :root for better scoping, but can be global) */
.bodyContainer {
  --bg-color: rgb(20, 20, 20);
  --card-color: #282828;

  /* Body styles applied to this container */
  align-items: center;
  justify-content: center;
  overflow: hidden;
  padding: 0px;
}

/* @media screen and (min-width: 1440px) {
  .bodyContainer {
    height: 858px;
  }
} */

.cards {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 8px;
  height: 100%;
}

@media screen and (max-width: 426px) {
  .cards {
    grid-template-columns: 1fr;
  }
}

/* This rule targets the ::after pseudo-element of cards when the #cards container is hovered */
.cards:hover > .card::after {
  opacity: 1;
}

.cardShadowContainer {
  background: rgba(0, 0, 0, 0);
}

.cardShadowContainer:hover {
  box-shadow: var(--card-box-shadow);
}

.card {
  background-color: rgba(255, 255, 255, 0.1);

  /* cursor: pointer; */
  display: flex;
  height: 100%;
  flex-direction: column;
  position: relative;
  width: 100%;
  padding: 75px;
}

.clipCardFirst {
    clip-path: polygon(0 38px, 0 100%, 100% 100%, 100% 0, 38px 0);
}

.clipCardLast {
    clip-path: polygon(0 0, 0 100%, calc(100% - 38px) 100%, 100% calc(100% - 38px), 100% 0);
}

.clipCardFirst .card-content {
  clip-path: polygon(0 38px, 0 100%, 100% 100%, 100% 0, 38px 0);
}

.clipCardLast .card-content {
  clip-path: polygon(0 0, 0 100%, calc(100% - 38px) 100%, 100% calc(100% - 38px), 100% 0);
}

.card:first-child {
  /* clip-path: polygon(0 10%, 0 100%, 100% 100%, 100% 0, 10% 0); */
}

.card:last-child {
  /* clip-path: polygon(0 0, 0 100%, 90% 100%, 100% 90%, 100% 0); */
}

/* This rule targets the ::before pseudo-element of a single card when that card is hovered */
.card:hover::before {
  opacity: 1;
}

.card::before,
.card::after {
  border-radius: inherit;
  content: "";
  height: 100%;
  left: 0px;
  opacity: 0;
  position: absolute;
  top: 0px;
  transition: opacity 500ms;
  width: 100%;
}

.card::before {
  /* Uses the dynamically set CSS variables --mouse-x and --mouse-y */
  background: radial-gradient(
    800px circle at var(--mouse-x) var(--mouse-y),
    rgba(218, 126, 35, 0.255),
    transparent 60%
  );
  z-index: 3;
}

.card::after {
  /* Uses the dynamically set CSS variables --mouse-x and --mouse-y */
  background: radial-gradient(
    600px circle at var(--mouse-x) var(--mouse-y),
    rgba(202, 91, 17, 0.8),
    transparent 40%
  );
  z-index: 1;
}

.card:hover {
  box-shadow: var(--card-box-shadow);
}

.card:first-child:hover {
  box-shadow: var(--card-box-shadow);
}

.card:last-child:hover {
  box-shadow: var(--card-box-shadow);
}

.card-content {
  background-color: var(--card-color);
  border-radius: inherit;
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  inset: 1px;
  padding: 10px;
  position: absolute;
  z-index: 2;
}
