/* Using CSS Modules, so class names will be hashed */

/* CSS Variables (moved from :root for better scoping, but can be global) */
.bodyContainer {
  --bg-color: rgb(20, 20, 20);
  --card-color: rgba(204, 204, 204, 0.1);

  /* Body styles applied to this container */
  align-items: center;
  height: 858px;
  justify-content: center;
  margin-bottom: 220px;
  overflow: hidden;
  padding: 0px;
    backdrop-filter: blur(2px);
    overflow: visible;
}

.cards {
  display: grid;
  grid-template-columns: 1fr;
  gap: 8px;
  height: 100%;
}

/* This rule targets the ::after pseudo-element of cards when the #cards container is hovered */
.cards:hover > .card::after {
  opacity: 1;
}

.card {
  background-color: rgba(204, 204, 204, 0.1);

  cursor: pointer;
  display: flex;
  /* height: 320px; */
  flex-direction: column;
  position: relative;
  width: 100%;
  padding: 75px;
  height: 100%;
  backdrop-filter: blur(10px);
}

/* This rule targets the ::before pseudo-element of a single card when that card is hovered */
.card:hover::before {
  opacity: 1;
}

.card::before,
.card::after {
  border-radius: inherit;
  content: "";
  height: 100%;
  left: 0px;
  opacity: 0;
  position: absolute;
  top: 0px;
  transition: opacity 500ms;
  width: 100%;
}

.card::before {
  /* Uses the dynamically set CSS variables --mouse-x and --mouse-y */
  background: radial-gradient(
    1200px circle at var(--mouse-x) var(--mouse-y),
    #da7e2341,
    transparent 60%
  );
  z-index: 3;
}

.card::after {
  /* Uses the dynamically set CSS variables --mouse-x and --mouse-y */
  background: radial-gradient(
    1000px circle at var(--mouse-x) var(--mouse-y),
    rgba(202, 91, 17, 0.8),
    transparent 40%
  );
  z-index: 1;
}

.card-content {
  background-color: var(--card-color);
  border-radius: inherit;
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  inset: 1px;
  padding: 10px;
  position: absolute;
  z-index: 2;
  backdrop-filter: blur(8px);
}